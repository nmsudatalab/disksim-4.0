##########################################################
#
# Algorithm specification.
#
##########################################################

[General]

# FIFO;SFQ;DSFQ-A;DSFQ-D;DSFQ-F;Split-SFQ;DSFQ-A-Timebased;DSFQ-A-Loadbased;SFQRC;2-Level;EDF;DTA

#**.proxy[*].algorithm = "FIFO"
#**.proxy[*].alg_param = ""

**.proxy[*].algorithm = "EDF"
**.proxy[*].alg_param = "<0 1.5> <1 1.5>"

#**.proxy[*].algorithm = "I2L"
# "I2L" format: <id replenish_amount QoS_delay> ... {AVATAR_period SARC_period}
#**.proxy[*].alg_param = "<0 20 0.80> <1 20 0.10> {1 1}"

#**.proxy[*].algorithm = "SFQRC"
# "SFQRC" format: [id weight] ... <id full_credit replenish_rate QoS_delay req_size> {read_speed write_speed seeking_time adv_step(if the prediction is too short)}
# Test 12 configuration
# **.proxy[*].alg_param = "[0 1000] [1 1000] <0 262144 262144 0.8 262144> <1 33554432 8388608 0.1 262144> {640000000 100000000 0.000 0.002}"
# Test 13 configuration
# **.proxy[*].alg_param = "[0 1000] [1 1000] <0 262144 262144 0.8 262144> <1 41943040 2097152 0.1 262144> {640000000 100000000 0.000 0.002}"

#**.proxy[*].algorithm = "DTA"
#**.proxy[*].alg_param = "0.5 4 [0.87 0.87]" # P_lag server_num [qos_lays for each application]

# "[0 1000] [1 1000] <0 4194304 2097152 1 4194304> <1 1572864 3145728 0.5 65536> {48000000 150000000 0.007 0.002}" # sr faster
# "[0 1000] [1 1000] <0 4194304 2097152 1 4194304> <1 1572864 3145728 0.5 65536> {64000000 200000000 0.007 0.002}" # sr faster2

# "[0 1000] [1 1000] <0 4194304 2097152 1 4194304> <1 3145728 3145728 0.5 65536> {64000000 200000000 0.007 0.002}" # 2x buffer
# "[0 1000] [1 1000] <0 4194304 2097152 1 4194304> <1 1572864 3145728 0.5 65536> {64000000 200000000 0.007 0.002}" # 1x buffer
# "[0 1000] [1 1000] <0 4194304 2097152 1 4194304> <1 786432 3145728 0.5 65536> {64000000 200000000 0.007 0.002}" # 0.5x buffer
# "[0 1000] [1 1000] <0 4194304 2097152 1 4194304> <1 393216 3145728 0.5 65536> {64000000 200000000 0.007 0.002}" # 0.25x buffer

#**.proxy[*].alg_param = \
#"[0 1000] [1 1000] <0 4194304 2097152 1 4194304> <1 1572864 6291456 0.5 65536> {64000000 200000000 0.007 0.002}" # 2x buffer rate
# "[0 1000] [1 1000] <0 4194304 2097152 1 4194304> <1 1572864 3145728 0.5 65536> {64000000 200000000 0.007 0.002}" # 1x buffer rate
# "[0 1000] [1 1000] <0 4194304 2097152 1 4194304> <1 1572864 1572864 0.5 65536> {64000000 200000000 0.007 0.002}" # 0.5x buffer rate
# "[0 1000] [1 1000] <0 4194304 2097152 1 4194304> <1 1572864 786432 0.5 65536> {64000000 200000000 0.007 0.002}" # 0.25x buffer rate

# checkpoint: 0.13 ... bursty: 0.36 ...
#**.proxy[*].alg_prop_wl = 1048576 # Propagation workload threshold: data length
#**.proxy[*].alg_prop_wl = 131072 # Propagation workload threshold: data length
**.proxy[*].degree = 4
**.proxy[*].newjob_proc_time = 0
**.proxy[*].finjob_proc_time = 0
